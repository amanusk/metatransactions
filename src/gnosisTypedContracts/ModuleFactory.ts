/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Module } from "./Module";

export class ModuleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Module> {
    return super.deploy(overrides) as Promise<Module>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Module {
    return super.attach(address) as Module;
  }
  connect(signer: Signer): ModuleFactory {
    return super.connect(signer) as ModuleFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Module {
    return new Contract(address, _abi, signerOrProvider) as Module;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "manager",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_masterCopy",
        type: "address"
      }
    ],
    name: "changeMasterCopy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "masterCopy",
        type: "address"
      }
    ],
    name: "ChangedMasterCopy",
    type: "event"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061029b806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c01000000000000000000000000000000000000000000000000000000006000350463481c6a7581146100575780637de7edef14610088575b600080fd5b61005f6100bd565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100bb6004803603602081101561009e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166100d9565b005b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff163314610149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061024a6026913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811615156101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806102266024913960400191505060405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b89181900360200190a15056fe496e76616c6964206d617374657220636f707920616464726573732070726f76696465644d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d616e61676572a165627a7a72305820b782e35eb274a196a55721b6fe9d0922eec6ff7d59e65588270a407ce648347f0029";
