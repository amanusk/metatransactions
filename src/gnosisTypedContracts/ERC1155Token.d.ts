/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface ERC1155TokenInterface extends Interface {
  functions: {
    balanceOf: TypedFunctionDescription<{
      encode([owner, id]: [string, BigNumberish]): string;
    }>;

    mint: TypedFunctionDescription<{
      encode([to, id, value, data]: [
        string,
        BigNumberish,
        BigNumberish,
        Arrayish
      ]): string;
    }>;

    safeTransferFrom: TypedFunctionDescription<{
      encode([from, to, id, value, data]: [
        string,
        string,
        BigNumberish,
        BigNumberish,
        Arrayish
      ]): string;
    }>;
  };

  events: {};
}

export class ERC1155Token extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ERC1155Token;
  attach(addressOrName: string): ERC1155Token;
  deployed(): Promise<ERC1155Token>;

  on(event: EventFilter | string, listener: Listener): ERC1155Token;
  once(event: EventFilter | string, listener: Listener): ERC1155Token;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ERC1155Token;
  removeAllListeners(eventName: EventFilter | string): ERC1155Token;
  removeListener(eventName: any, listener: Listener): ERC1155Token;

  interface: ERC1155TokenInterface;

  functions: {
    balanceOf(owner: string, id: BigNumberish): Promise<BigNumber>;

    mint(
      to: string,
      id: BigNumberish,
      value: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      value: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  balanceOf(owner: string, id: BigNumberish): Promise<BigNumber>;

  mint(
    to: string,
    id: BigNumberish,
    value: BigNumberish,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  safeTransferFrom(
    from: string,
    to: string,
    id: BigNumberish,
    value: BigNumberish,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    balanceOf(owner: string, id: BigNumberish): Promise<BigNumber>;

    mint(
      to: string,
      id: BigNumberish,
      value: BigNumberish,
      data: Arrayish
    ): Promise<BigNumber>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      value: BigNumberish,
      data: Arrayish
    ): Promise<BigNumber>;
  };
}
