/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { ERC1155Token } from "./ERC1155Token";

export class ERC1155TokenFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<ERC1155Token> {
    return super.deploy(overrides) as Promise<ERC1155Token>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): ERC1155Token {
    return super.attach(address) as ERC1155Token;
  }
  connect(signer: Signer): ERC1155TokenFactory {
    return super.connect(signer) as ERC1155TokenFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Token {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Token;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address"
      },
      {
        name: "id",
        type: "uint256"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address"
      },
      {
        name: "id",
        type: "uint256"
      },
      {
        name: "value",
        type: "uint256"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address"
      },
      {
        name: "to",
        type: "address"
      },
      {
        name: "id",
        type: "uint256"
      },
      {
        name: "value",
        type: "uint256"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061078a806100206000396000f3fe608060405234801561001057600080fd5b506004361061005c577c01000000000000000000000000000000000000000000000000000000006000350462fdd58e8114610061578063731133e91461009f578063f242432a1461012d575b600080fd5b61008d6004803603604081101561007757600080fd5b50600160a060020a0381351690602001356101c2565b60408051918252519081900360200190f35b61012b600480360360808110156100b557600080fd5b600160a060020a0382351691602081013591604082013591908101906080810160608201356401000000008111156100ec57600080fd5b8201836020820111156100fe57600080fd5b8035906020019184600183028401116401000000008311171561012057600080fd5b509092509050610234565b005b61012b600480360360a081101561014357600080fd5b600160a060020a03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b50909250905061031e565b6000600160a060020a038316151561020e5760405160e560020a62461bcd02815260040180806020018281038252602b815260200180610682602b913960400191505060405180910390fd5b50600090815260208181526040808320600160a060020a03949094168352929052205490565b600160a060020a038516151561027e5760405160e560020a62461bcd02815260040180806020018281038252602181526020018061070d6021913960400191505060405180910390fd5b600084815260208181526040808320600160a060020a03891684529091529020546102b090849063ffffffff6104be16565b600085815260208181526040808320600160a060020a038a1684528252808320939093558251601f8501829004820281018201909352838352610317923392918991899189919089908990819084018382808284376000920191909152506104d792505050565b5050505050565b600160a060020a03851615156103685760405160e560020a62461bcd0281526004018080602001828103825260288152602001806106ad6028913960400191505060405180910390fd5b600160a060020a0386163314806103a65750600160a060020a03861660009081526001602081815260408084203385529091529091205460ff161515145b15156103e65760405160e560020a62461bcd0281526004018080602001828103825260388152602001806106d56038913960400191505060405180910390fd5b600084815260208181526040808320600160a060020a038a168452909152902054610417908463ffffffff61066416565b600085815260208181526040808320600160a060020a038b8116855292528083209390935587168152205461044d9084906104be565b600085815260208181526040808320600160a060020a038a168452825291829020929092558051601f84018390048302810183019091528281526104b691339189918991899189919089908990819084018382808284376000920191909152506104d792505050565b505050505050565b6000828201838110156104d057600080fd5b9392505050565b6104e084610679565b156104b6576040517ff23a6e6100000000000000000000000000000000000000000000000000000000808252600160a060020a03888116600484019081528882166024850152604484018790526064840186905260a060848501908152855160a4860152855193949289169363f23a6e61938c938c938b938b938b93929160c490910190602085019080838360005b8381101561058757818101518382015260200161056f565b50505050905090810190601f1680156105b45780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b505050506040513d602081101561060157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016146104b65760405160e560020a62461bcd02815260040180806020018281038252603181526020018061072e6031913960400191505060405180910390fd5b60008282111561067357600080fd5b50900390565b6000903b119056fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e455243313135353a206d696e7420746f20746865207a65726f2061646472657373455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a165627a7a72305820ec9674fc0abc53e4968847119dff84340a1c01388327133684099a1fc29c40690029";
