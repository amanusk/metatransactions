/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface MasterCopyInterface extends Interface {
  functions: {
    changeMasterCopy: TypedFunctionDescription<{
      encode([_masterCopy]: [string]): string;
    }>;
  };

  events: {
    ChangedMasterCopy: TypedEventDescription<{
      encodeTopics([masterCopy]: [null]): string[];
    }>;
  };
}

export class MasterCopy extends Contract {
  connect(signerOrProvider: Signer | Provider | string): MasterCopy;
  attach(addressOrName: string): MasterCopy;
  deployed(): Promise<MasterCopy>;

  on(event: EventFilter | string, listener: Listener): MasterCopy;
  once(event: EventFilter | string, listener: Listener): MasterCopy;
  addListener(eventName: EventFilter | string, listener: Listener): MasterCopy;
  removeAllListeners(eventName: EventFilter | string): MasterCopy;
  removeListener(eventName: any, listener: Listener): MasterCopy;

  interface: MasterCopyInterface;

  functions: {
    changeMasterCopy(
      _masterCopy: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  changeMasterCopy(
    _masterCopy: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    ChangedMasterCopy(masterCopy: null): EventFilter;
  };

  estimate: {
    changeMasterCopy(_masterCopy: string): Promise<BigNumber>;
  };
}
