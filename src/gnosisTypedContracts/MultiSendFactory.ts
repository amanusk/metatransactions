/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { MultiSend } from "./MultiSend";

export class MultiSendFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<MultiSend> {
    return super.deploy(overrides) as Promise<MultiSend>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): MultiSend {
    return super.attach(address) as MultiSend;
  }
  connect(signer: Signer): MultiSendFactory {
    return super.connect(signer) as MultiSendFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSend {
    return new Contract(address, _abi, signerOrProvider) as MultiSend;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "transactions",
        type: "bytes"
      }
    ],
    name: "multiSend",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080517f6d756c746973656e642e67756172642e6279746573333200000000000000000081529051908190036017019020600055610266806100556000396000f3fe608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504638d80ff0a811461004c575b600080fd5b6100f26004803603602081101561006257600080fd5b81019060208101813564010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f4945050505050565b005b604080517f6d756c746973656e642e67756172642e62797465733332000000000000000000815290519081900360170190206000541415610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061020b6030913960400191505060405180910390fd5b805160205b81811015610205578083015160f81c6001820184015160601c6015830185015160358401860151605585018701600085600081146101ca57600181146101da576101e5565b6000808585888a5af191506101e5565b6000808585895af491505b508015156101f257600080fd5b8260550187019650505050505050610185565b50505056fe4d756c746953656e642073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6ca165627a7a72305820c0a3abc0824fa06a22d4fe097713b6acaca9cc6208140f688ff6b6b7bc85dbb10029";
